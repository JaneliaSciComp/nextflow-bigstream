work_dir = "$PWD/work"

params {
    tracedir = "${work_dir}/trace"
    lsf_opts = ""
    runtime_opts = ""
    singularity_cache_dir = "$HOME/.singularity_cache"
    dask_work_dir = "${work_dir}/dask"
}

includeConfig './external-modules/dask/nextflow.config'

manifest {
    defaultBranch = 'main'
    name = 'Bigstream Registration'
    author = 'Cristian Goina'
    homePage = 'https://github.com/JaneliaSciComp/nextflow-bigstream'
    description = 'Nextflow workflow that implements Bigstream based registration'
    mainScript = 'main.nf'
    nextflowVersion = '>=20.10.0'
    version = '0.1.0'
}

timeline {
  enabled = false
  file = "${params.tracedir}/execution_timeline.html"
}

report {
  enabled = false
  file = "${params.tracedir}/execution_report.html"
}

trace {
  enabled = false
  file = "${params.tracedir}/execution_trace.txt"
  overwrite = true
}

dag {
  enabled = false
  file = "${params.tracedir}/pipeline_dag.svg"
}

default_docker_runtime_opts = "-v $PWD:$PWD ${params.runtime_opts}"
default_singularity_runtime_opts = "--nv -B $PWD ${params.runtime_opts}"

process {
    beforeScript = 'export PROCESS_DIR=`pwd`'

    withLabel: process_low {
        cpus = 1
        memory = 1.GB
    }
}

profiles {
  
    debug { 
        process.beforeScript = 'echo $HOSTNAME' 
    }

    standard {
        docker.enabled = false
        singularity {
            enabled = true
            runOptions = default_singularity_runtime_opts
        }
    }

    localdocker {
        docker {
            enabled = true
            temp = 'auto'
            runOptions = default_docker_runtime_opts
        }
        singularity.enabled = false
    }

    aws {
        docker {
            enabled = true
            temp = 'auto'
            runOptions = default_docker_runtime_opts
        }
        singularity.enabled = false
        aws {
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
        process {
            executor = 'awsbatch'
            queue = 'janelia-nextflow-tower-connect'
        }
    }

    tower {
        docker.enabled = true
        singularity.enabled = false
        aws {
            batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        }
    }

    lsf {
        process {
            executor = 'lsf'
            clusterOptions = params.lsf_opts
        }
        docker.enabled = false
        singularity.enabled = true
    }
}

executor {
    queueSize = 1000
    pollInterval = '2 sec'
}

singularity {
    autoMounts = true
    cacheDir = "$HOME/.singularity_cache"
    runOptions = default_singularity_runtime_opts
}
